configurations {
	compileOnly.extendsFrom(jeecoreapis)
	compileOnly.extendsFrom(jeewebapis)
}

dependencies {
	implementation 'org.apache.groovy:groovy'
	implementation sharedLib('org.apache.httpcomponents:httpclient')

	implementation sharedLib('net.logstash.logback:logstash-logback-encoder')
	
	implementation sharedLib('commons-codec:commons-codec')
	implementation sharedLib('org.apache.commons:commons-collections4')
	implementation sharedLib('commons-io:commons-io')

	implementation(sharedLib('org.apache.tika:tika-core'))
	implementation(sharedLib('org.apache.tika:tika-parsers')) {
		transitive = false
	}

	//apache POI
	api sharedLib('org.apache.poi:poi')
	api sharedLib('org.apache.poi:poi-ooxml')
	
	//JXLS
	api sharedLib('org.jxls:jxls')
	implementation sharedLib('org.jxls:jxls-poi')

	// jasperreports
	api(sharedLib('net.sf.jasperreports:jasperreports')) {
		// define minimum dependency
		exclude(group: 'org.eclipse.jdt', module: 'ecj')
		exclude(group: 'org.jfree', module: 'jcommon')
		exclude(group: 'org.jfree', module: 'jfreechart')
		// 新しいバージョンを個別指定する
		exclude(group: 'com.github.librepdf', module: 'openpdf')
	}
	// openpdf (for use JasperReports) 
	runtimeOnly sharedLib('com.github.librepdf:openpdf')

	implementation sharedLib('org.apache.commons:commons-fileupload2-jakarta-servlet6')

	//Java JWT
	implementation sharedLib('io.jsonwebtoken:jjwt-api')
	runtimeOnly sharedLib('io.jsonwebtoken:jjwt-impl')
	runtimeOnly sharedLib('io.jsonwebtoken:jjwt-jackson')
}
