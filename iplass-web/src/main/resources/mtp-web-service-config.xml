<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE serviceDefinition>
<serviceDefinition>
	<service>
		<interface>org.iplass.mtp.impl.core.ManagerFactory</interface>
		<property name="org.iplass.mtp.web.actionmapping.definition.ActionMappingDefinitionManager" value="org.iplass.mtp.impl.web.actionmapping.ActionMappingDefinitionManagerImpl" />
		<property name="org.iplass.mtp.web.staticresource.definition.StaticResourceDefinitionManager" value="org.iplass.mtp.impl.web.staticresource.StaticResourceDefinitionManagerImpl" />
		<property name="org.iplass.mtp.web.template.definition.TemplateDefinitionManager" value="org.iplass.mtp.impl.web.template.TemplateDefinitionManagerImpl" />
		<property name="org.iplass.mtp.webapi.definition.EntityWebApiDefinitionManager" value="org.iplass.mtp.impl.webapi.EntityWebApiDefinitionManagerImpl" />
		<property name="org.iplass.mtp.webapi.definition.WebApiDefinitionManager" value="org.iplass.mtp.impl.webapi.WebApiDefinitionManagerImpl" />
		<property name="org.iplass.mtp.auth.oauth.definition.OAuthAuthorizationDefinitionManager" value="org.iplass.mtp.impl.auth.oauth.OAuthAuthorizationDefinitionManagerImpl" />
		<property name="org.iplass.mtp.auth.oauth.definition.OAuthClientDefinitionManager" value="org.iplass.mtp.impl.auth.oauth.OAuthClientDefinitionManagerImpl" />
		<property name="org.iplass.mtp.auth.oauth.definition.OAuthResourceServerDefinitionManager" value="org.iplass.mtp.impl.auth.oauth.OAuthResourceServerDefinitionManagerImpl" />
	</service>

	<!-- MetaData JAXB configuration -->
	<service>
		<interface>org.iplass.mtp.impl.metadata.MetaDataJAXBService</interface>
		<property name="classToBeBound" value="org.iplass.mtp.impl.metadata.refs.web.WebRootMetaDatas" additional="true" />
	</service>

	<!-- MetaData Repository configuration -->
	<service>
		<interface>org.iplass.mtp.impl.metadata.MetaDataRepository</interface>
		<property name="annotatedClass" value="org.iplass.mtp.impl.webapi.command.MetaDataRefs" additional="true" />
		<property name="resourcePath" value="/mtp-web-metadata.xml" additional="true" />

		<!-- shared MetaData config -->
		<property name="sharedStore" class="org.iplass.mtp.impl.metadata.annotation.AnnotationMetaDataStore" additional="true">
			<property name="annotatableMetaDataFactory" class="org.iplass.mtp.impl.web.actionmapping.MetaActionMappingFactory" />
			<property name="annotatableMetaDataFactory" class="org.iplass.mtp.impl.web.actionmapping.MetaActionMappingsFactory" />
			<property name="annotatableMetaDataFactory" class="org.iplass.mtp.impl.web.template.MetaTemplateFactory" />
			<property name="annotatableMetaDataFactory" class="org.iplass.mtp.impl.web.template.MetaTemplatesFactory" />
			<property name="annotatableMetaDataFactory" class="org.iplass.mtp.impl.webapi.MetaWebApiFactory" />
			<property name="annotatableMetaDataFactory" class="org.iplass.mtp.impl.webapi.MetaWebApisFactory" />
		</property>
 	</service>

	<!-- Definition Service -->
	<service>
		<interface>org.iplass.mtp.impl.definition.DefinitionService</interface>
		<property name="typeMap" value="org.iplass.mtp.impl.web.actionmapping.ActionMappingService$TypeMap" additional="true" />
		<property name="typeMap" value="org.iplass.mtp.impl.webapi.EntityWebApiService$TypeMap" additional="true" />
		<property name="typeMap" value="org.iplass.mtp.impl.web.template.TemplateService$TypeMap" additional="true" />
		<property name="typeMap" value="org.iplass.mtp.impl.webapi.WebApiService$TypeMap" additional="true" />
		<property name="typeMap" value="org.iplass.mtp.impl.web.staticresource.StaticResourceService$TypeMap" additional="true" />
		<property name="typeMap" value="org.iplass.mtp.impl.auth.oauth.OAuthAuthorizationService$TypeMap" additional="true" />
		<property name="typeMap" value="org.iplass.mtp.impl.auth.oauth.OAuthClientService$TypeMap" additional="true" />
		<property name="typeMap" value="org.iplass.mtp.impl.auth.oauth.OAuthResourceServerService$TypeMap" additional="true" />
	</service>

	<!-- Tenant関連 -->
	<service>
		<interface>org.iplass.mtp.impl.core.TenantContextService</interface>
		<property name="tenantResource" value="org.iplass.mtp.impl.web.actionmapping.cache.ContentCacheContext" additional="true" />
	</service>
	<service>
		<interface>org.iplass.mtp.impl.script.ScriptService</interface>
		<property name="initScript" value="/org/iplass/mtp/impl/script/web/InitScript.gr" additional="true" />
	</service>
	<service>
		<interface>org.iplass.mtp.impl.tenant.MetaTenantService</interface>

		<!-- tenant config type map -->
		<property name="configType" additional="true">
			<property name="definitionClass" value="org.iplass.mtp.tenant.web.TenantWebInfo" />
			<property name="metadataClass" value="org.iplass.mtp.impl.tenant.web.MetaTenantWebInfo" />
			<property name="scriptBindingName" value="tenantWebInfo" />
		</property>
	</service>

	<!-- 認証関連 -->
	<service>
		<interface>org.iplass.mtp.impl.auth.AuthService</interface>
		<property name="authenticationProvider" class="org.iplass.mtp.impl.auth.authenticate.rememberme.RememberMeTokenAuthenticationProvider"  inherit="false">
			<property name="deleteTokenOnFailure" value="true" />
			<property name="clientStore" class="org.iplass.mtp.impl.auth.authenticate.token.web.AuthTokenCookieStore">
				<property name="cookieName" value="iprmtkn" />
			</property>

			<property name="authenticationProvider" class="org.iplass.mtp.impl.auth.authenticate.builtin.BuiltinAuthenticationProvider">
	 			<property name="updatable" value="true" />
	 			<property name="providerName" value="default" />

	 			<!-- if load custom reference property at login, set userEntityResolver.eagerLoadReferenceProperty -->
	 			<!--
	 			<property name="userEntityResolver" class="org.iplass.mtp.impl.auth.authenticate.DefaultUserEntityResolver">
		 			<property name="eagerLoadReferenceProperty" value="rank" />
		 			<property name="eagerLoadReferenceProperty" value="groups" />
		 			<property name="eagerLoadReferenceProperty" value="yourCustomReference" />
	 			</property>
	 			 -->

				<property name="passwordHashSettings">
					<property name="version" value="1" />
					<property name="passwordHashAlgorithm" value="SHA-256" />
					<property name="systemSalt" value="iPLAssSystemSalt" />
					<property name="stretchCount" value="1000" />
				</property>
				
				<property name="autoLoginHandler" class="org.iplass.mtp.impl.auth.authenticate.builtin.web.IdPasswordAutoLoginHandler" />
			</property>
		</property>

		<property name="authenticationProvider" class="org.iplass.mtp.impl.auth.oauth.AccessTokenAuthenticationProvider" inherit="false">
			<property name="providerName" value="oauthAccessToken" />
			<property name="credentialTypeForTrust" value="org.iplass.mtp.auth.login.IdPasswordCredential" />
			<property name="accountHandleClassForTrust" value="org.iplass.mtp.impl.auth.authenticate.builtin.BuiltinAccountHandle" />
			<property name="autoLoginHandler" class="org.iplass.mtp.impl.auth.authenticate.token.web.BearerTokenAutoLoginHandler">
				<property name="authTokenType" value="OAT" />
				<property name="rejectAmbiguousRequest" value="true" />
			</property>
			
 			<!-- if load custom reference property at login, set userEntityResolver.eagerLoadReferenceProperty -->
 			<!--
 			<property name="userEntityResolver" class="org.iplass.mtp.impl.auth.authenticate.DefaultUserEntityResolver">
	 			<property name="eagerLoadReferenceProperty" value="rank" />
	 			<property name="eagerLoadReferenceProperty" value="groups" />
	 			<property name="eagerLoadReferenceProperty" value="yourCustomReference" />
 			</property>
 			 -->
		</property>

		<property name="authenticationProvider" class="org.iplass.mtp.impl.auth.authenticate.simpletoken.SimpleAuthTokenAuthenticationProvider" inherit="false">
			<property name="providerName" value="simpleAuthToken" />
			<property name="credentialTypeForTrust" value="org.iplass.mtp.auth.login.IdPasswordCredential" />
			<property name="accountHandleClassForTrust" value="org.iplass.mtp.impl.auth.authenticate.builtin.BuiltinAccountHandle" />
			<property name="autoLoginHandler" class="org.iplass.mtp.impl.auth.authenticate.token.web.BearerTokenAutoLoginHandler">
				<property name="authTokenType" value="SAT" />
			</property>
		</property>

		<property name="authorizationProvider" class="org.iplass.mtp.impl.auth.authorize.builtin.BuiltinAuthorizationProvider">
			<property name="authorizationContextHandler" class="org.iplass.mtp.impl.auth.authorize.builtin.action.ActionAuthContextHandler" additional="true" />
			<property name="authorizationContextHandler" class="org.iplass.mtp.impl.auth.authorize.builtin.webapi.WebApiAuthContextHandler" additional="true" />
		</property>
	</service>
	
	<!-- OAuth関連 -->
	<service>
		<interface>org.iplass.mtp.impl.auth.authenticate.token.AuthTokenService</interface>
		<property name="handler" class="org.iplass.mtp.impl.auth.oauth.token.opaque.AccessTokenHandler" additional="true" >
			<property name="type" value="OAT" />
			<property name="store" value="cachableRdb" />
			<property name="secureRandomGeneratorName" value="accessTokenGenerator" />
			<property name="refreshTokenType" value="ORT" />
			<property name="refreshTokenStore" value="cachableRdb" />
			<property name="refreshTokenSecureRandomGeneratorName" value="refreshTokenGenerator" />
			<property name="hashSettings">
				<property name="version" value="1" />
				<property name="hashAlgorithm" value="SHA-256" />
			</property>
		</property>
		<property name="handler" class="org.iplass.mtp.impl.auth.oauth.OAuthClientCredentialHandler" additional="true" >
			<property name="type" value="OC" />
			<property name="oldCredentialValidDays" value="7" />
			<property name="store" value="cachableRdb" />
			<property name="secureRandomGeneratorName" value="clientSecretGenerator" />
			<property name="hashSettings">
				<property name="version" value="1" />
				<property name="hashAlgorithm" value="SHA-256" />
			</property>
		</property>
		<property name="handler" class="org.iplass.mtp.impl.auth.oauth.OAuthClientCredentialHandler" additional="true" >
			<property name="type" value="ORS" />
			<property name="oldCredentialValidDays" value="7" />
			<property name="store" value="cachableRdb" />
			<property name="secureRandomGeneratorName" value="clientSecretGenerator" />
			<property name="hashSettings">
				<property name="version" value="1" />
				<property name="hashAlgorithm" value="SHA-256" />
			</property>
		</property>
	</service>
	<service>
		<interface>org.iplass.mtp.impl.util.random.SecureRandomService</interface>
		<property name="accessTokenGenerator">
			<property name="numBitsOfSecureRandomToken" value="256" />
			<property name="radixOfSecureRandomToken" value="64" />
			<property name="useStrongSecureRandom" value="false" />
		</property>
		<property name="refreshTokenGenerator">
			<property name="numBitsOfSecureRandomToken" value="256" />
			<property name="radixOfSecureRandomToken" value="64" />
			<property name="useStrongSecureRandom" value="false" />
		</property>
		<property name="clientSecretGenerator">
			<property name="numBitsOfSecureRandomToken" value="256" />
			<property name="radixOfSecureRandomToken" value="64" />
			<property name="useStrongSecureRandom" value="false" />
		</property>
	</service>
	<service>
		<interface>org.iplass.mtp.impl.auth.oauth.OAuthAuthorizationService</interface>
		<property name="defaultConsentTemplateName" value="oauth/Consent" />
		<property name="authorizationCodeStore" class="org.iplass.mtp.impl.auth.oauth.code.CacheAuthorizationCodeStore">
			<property name="timeToLive" value="180000" />
		</property>
		<property name="accessTokenStore" class="org.iplass.mtp.impl.auth.oauth.token.opaque.OpaqueOAuthAccessTokenStore">
			<property name="seriesHashAlgorithm" value="SHA-256" />
			<!-- TODO change salt for each environment -->
			<property name="seriesHashSalt" value="iPLAss#86e0f9cf-2b45-4395-a449-4c38760cc259" />
			<property name="tokenCreationStrategy" class="org.iplass.mtp.impl.auth.oauth.token.opaque.NewTokenCreationStrategy" />
		</property>
		
		<property name="jwtProcessor" class="org.iplass.mtp.impl.auth.oauth.jwt.JjwtProcesor" />
		
		<!-- if OpenID Connect enabled, configure keyStore that uses for sign to ID Token as JWT -->
		<!--
		<property name="jwtKeyStore" class="org.iplass.mtp.impl.auth.oauth.jwt.SimpleJwtKeyStore">
			<property name="keyStoreType" value="PKCS12" />
			<property name="keyStoreFilePath" value="[your jks keystore filepath]" />
			<property name="keyStorePassword" value="[your jks store password]" />
			<property name="keyPasswordMap">
				<property name="yourKeyId1" value="[key password for yourKeyId1" />
				<property name="yourKeyId2" value="[key password for yourKeyId2" />
			</property>
		</property>
		-->
		
		<property name="subjectIdHashAlgorithm" value="SHA-256" />
		<!-- TODO set salt for each environment if subjectId hashing -->
		<!-- 
		<property name="subjectIdHashSalt" value="yourOwnSalt" />
		 -->
	</service>
	<service>
		<interface>org.iplass.mtp.impl.auth.oauth.OAuthClientService</interface>
	</service>
	<service>
		<interface>org.iplass.mtp.impl.auth.oauth.OAuthResourceServerService</interface>
	</service>

	<!-- Web関連 -->
	<service>
		<interface>org.iplass.mtp.impl.web.WebFrontendService</interface>
		<class>org.iplass.mtp.impl.web.WebFrontendService</class>
		<!-- welcome file(action) -->
		<property name="welcomeAction" value="index" />
		<property name="transactionTokenMaxSize" value="50" />
		<property name="defaultClientCacheType" value="CACHE" />
		<!-- DispatcherFilterで処理しないpathの定義 -->
		<!-- static contents -->
		<property name="excludePath" value="(/errorhtml/.*)|(/images/.*)|(/scripts/.*)|(/styles/.*)|(/favicon.ico)|(/webjars/.*)" />
		<!-- servlet implementation -->
		<property name="excludePath" value="(/checkStatus)|(/cmcs)" />

		<!-- WebAPI(REST)のpathの定義 -->
		<property name="restPath" value="/api/" />
		<!-- ログアウト時にキックするURL -->
		<property name="logoutUrl" value="logout" />
		<!-- エラーページの設定 -->
		<!--
		<property name="errorUrlSelector" class="org.iplass.gem.GemErrorUrlSelector" />
		-->
		<!-- ログインページの設定 -->
		<!--
		<property name="loginUrlSelector" class="org.iplass.gem.GemLoginUrlSelector" />
		-->
		<!-- テンポラリファイル格納パス 未指定時は「javax.servlet.context.tempdir」を使用 -->
		<!--
		<property name="tempFileDir" value="/tmp" />
		-->
		<!-- ダイレクトアクセスポート このポートの場合テナントのurlForRequest指定は無効 -->
		<!--
		<property name="directAccessPort" value="8080" />
		-->

		<!-- ContentDispositionの出力設定 -->
		<!-- default -->
		<property name="contentDispositionPolicy" class="org.iplass.mtp.impl.web.ContentDispositionPolicy">
			<property name="userAgentKey" value="*" />
			<property name="contentDispositionTypeName" value="*" />
			<property name="unescapeCharacter" value="-._~" />
			<property name="defaultContentDispositionTypeName" value="ATTACHMENT" />
		</property>
		<!-- IE11 -->
		<!-- IE11の場合、INLINEではブランクをエスケープしない -->
		<property name="contentDispositionPolicy" class="org.iplass.mtp.impl.web.ContentDispositionPolicy">
			<property name="userAgentKey" value="Trident" />
			<property name="contentDispositionTypeName" value="INLINE" />
			<property name="unescapeCharacter" value="-._~ " />
			<!--
			<property name="defaultContentDispositionTypeName" value="" />
			 -->
		</property>
		<!--
			追加する場合、userAgentKey、contentDispositionTypeNameごとにエスケープしない文字を指定。
			contentDispositionTypeName: * | ATTACHMENT | INLINE
			unescapeCharacter: アルファベット、数字以外で除外する文字
		-->
		<!--
		<property name="contentDispositionPolicy" class="org.iplass.mtp.impl.web.ContentDispositionPolicy">
			<property name="userAgentKey" value="XXXX" />
			<property name="contentDispositionTypeName" value="INLINE" />
			<property name="unescapeCharacter" value="-._~" />
		</property>
		-->

		<!-- ウィルススキャン実行 -->
		<!--
		<property name="uploadFileScanner" class="org.iplass.mtp.impl.web.fileupload.DefaultVirusScanner" >
			<property name="commandPath" value="xxxxx.exe ${file}" />
			<property name="timeout" value="15" />
		</property>
		 -->

		<!-- MagicByteCheck実行するか -->
		<property name="isExecMagicByteCheck" value="true" />
		<!-- MagicByteCheck実行 -->
		<property name="magicByteChecker" class="org.iplass.mtp.impl.web.fileupload.DefaultMagicByteChecker" >
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="image/gif" />
				<property name="magicBytePattern" value="^474946383761.*|^474946383961.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="image/bmp" />
				<property name="magicBytePattern" value="^424d.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="image/jpeg" />
				<property name="magicBytePattern" value="^ffd8.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="image/png" />
				<property name="magicBytePattern" value="^89504e470d0a1a0a.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="application/x-shockwave-flash" />
				<property name="magicBytePattern" value="^465753.*|^435753.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="application/pdf" />
				<property name="magicBytePattern" value="^25504446.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="^application/vnd[.]ms-.*|^application/msword.*" />
				<property name="magicBytePattern" value="^504b030414000600.*|^d0cf11e0a1b11ae1.*|^7b5c72746631.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="^application/vnd[.]ms-.*|^application/msword.*" />
				<property name="extensionPattern" value="^csv$" />
				<property name="magicBytePattern" value=".*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="extensionPattern" value="^xls$" />
				<property name="magicBytePattern" value="^d0cf11e0a1b11ae1.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="^application/vnd[.]openxmlformats-officedocument.*" />
				<property name="magicBytePattern" value="^504b030414000600.*|^d0cf11e0a1b11ae1.*" />
			</property>
			<property name="magicByteRule" class="org.iplass.mtp.impl.web.fileupload.MagicByteRule" >
				<property name="mineTypePattern" value="^application/vnd[.]openxmlformats-officedocument.*" />
				<property name="extensionPattern" value="^xlsx$|^docx$|^pptx$" />
				<property name="magicBytePattern" value="^504b030414000808.*|^d0cf11e0a1b11ae1.*" />
			</property>
		</property>
	</service>

	<!-- Entity関連 -->
	<service>
		<interface>org.iplass.mtp.impl.entity.EntityService</interface>

		<property name="interceptor" class="org.iplass.mtp.impl.entity.contentcache.ContentCacheInterceptor"  inherit="false" />
		<property name="interceptor" class="org.iplass.mtp.impl.entity.auth.EntityAuthInterceptor"  inherit="false" />
		<property name="interceptor" class="org.iplass.mtp.impl.entity.auditlog.AuditLogInterceptor"  inherit="false" />
		<property name="interceptor" class="org.iplass.mtp.impl.entity.listener.EntityEventListenerInterceptor"  inherit="false" />
		<property name="interceptor" class="org.iplass.mtp.impl.entity.l10n.EntityLocalizationInterceptor"  inherit="false" />
		<property name="interceptor" class="org.iplass.mtp.impl.entity.cache.EntityCacheInterceptor"  inherit="false" />
		<property name="interceptor" class="org.iplass.mtp.impl.entity.fulltextsearch.FulltextSearchInterceptor"  inherit="false" />
	</service>

	<!-- Command関連 -->
	<service>
		<interface>org.iplass.mtp.impl.command.InterceptorService</interface>
		<class>org.iplass.mtp.impl.command.InterceptorService</class>

		<property name="web" class="org.iplass.mtp.impl.command.interceptors.LoggingInterceptor" />
		<property name="web" class="org.iplass.mtp.impl.command.interceptors.TransactionInterceptor" />
		<property name="web" class="org.iplass.mtp.impl.web.interceptors.TokenInterceptor" />

		<property name="webApi" class="org.iplass.mtp.impl.webapi.interceptors.InitialInterceptor" />
		<property name="webApi" class="org.iplass.mtp.impl.webapi.interceptors.AuthInterceptor" />
		<property name="webApi" class="org.iplass.mtp.impl.webapi.interceptors.OAuthScopeInterceptor" />
		<property name="webApi" class="org.iplass.mtp.impl.webapi.interceptors.LoggingInterceptor" />
		<property name="webApi" class="org.iplass.mtp.impl.command.interceptors.TransactionInterceptor" />
		<property name="webApi" class="org.iplass.mtp.impl.webapi.interceptors.TokenInterceptor" />
	</service>

	<!-- 帳票出力サービス -->
	<service>
		<interface>org.iplass.mtp.impl.report.ReportingEngineService</interface>
		<class>org.iplass.mtp.impl.report.ReportingEngineServiceImpl</class>
		<property name="repotingEngine" class="org.iplass.mtp.impl.report.JasperReportingEngine">
			<property name="supportFiles" value="PDF"/>
			<property name="supportFiles" value="XLS"/>
			<property name="supportFiles" value="XLSX"/>
		</property>
		<property name="repotingEngine" class="org.iplass.mtp.impl.report.PoiReportingEngine">
			<property name="supportFiles" value="XLS_POI"/>
			<property name="supportFiles" value="XLSX_POI"/>
			<property name="supportFiles" value="XLSX_SXSSF_POI"/>
		</property>
		<property name="repotingEngine" class="org.iplass.mtp.impl.report.JxlsReportingEngine">
			<property name="supportFiles" value="XLS_JXLS"/>
			<property name="supportFiles" value="XLSX_JXLS"/>
		</property>
	</service>

	<!-- WebApi Service -->
	<service>
		<interface>org.iplass.mtp.impl.webapi.WebApiService</interface>
		<property name="enableDefinitionApi" value="false" />
		<property name="enableBinaryApi" value="false" />

		<property name="xRequestedWithMap">
			<property name="X-Requested-With" value="XMLHttpRequest" />
		</property>
		<property name="statusMap">
			<property name="exception" value="org.iplass.mtp.auth.login.LoginException" />
			<property name="status" value="401" />
		</property>
		<property name="statusMap">
			<property name="exception" value="org.iplass.mtp.auth.NoPermissionException" />
			<property name="status" value="403" />
		</property>
		<property name="statusMap">
			<property name="exception" value="org.iplass.mtp.auth.NeedTrustedAuthenticationException" />
			<property name="status" value="403" />
		</property>
		<property name="statusMap">
			<property name="exception" value="org.iplass.mtp.impl.web.RequestBodyTooLargeException" />
			<property name="status" value="413" />
		</property>
		<property name="statusMap">
			<property name="exception" value="org.iplass.mtp.ApplicationException" />
			<property name="status" value="500" />
		</property>
		<property name="statusMap">
			<property name="exception" value="org.iplass.mtp.SystemException" />
			<property name="status" value="500" />
		</property>
	</service>
	<service>
		<interface>org.iplass.mtp.impl.webapi.jaxb.WebApiJaxbService</interface>
		<property name="classToBeBound" value="org.iplass.mtp.impl.webapi.jaxb.Builtins" />
		<!-- if use DefinitionApi, add BuiltinDefinitions to classToBeBound
		<property name="classToBeBound" value="org.iplass.mtp.impl.webapi.jaxb.BuiltinDefinitions" additional="true" />
		 -->
	</service>
	<service>
		<interface>org.iplass.mtp.impl.webapi.jackson.WebApiObjectMapperService</interface>
		<property name="mixin">
			<property name="target" value="org.iplass.mtp.entity.GenericEntity" />
			<property name="mixinSource" value="org.iplass.mtp.impl.webapi.jackson.MixinEntity" />
		</property>
		<property name="mixin">
			<property name="target" value="org.iplass.mtp.entity.Entity" />
			<property name="mixinSource" value="org.iplass.mtp.impl.webapi.jackson.MixinEntity" />
		</property>
		<property name="mixin">
			<property name="target" value="org.iplass.mtp.definition.binary.BinaryDefinition" />
			<property name="mixinSource" value="org.iplass.mtp.impl.webapi.jackson.MixinBinaryDefinition" />
		</property>

		<property name="parameterType">
			<property name="typeName" value="entity" />
			<property name="className" value="org.iplass.mtp.entity.GenericEntity" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="decimal" />
			<property name="className" value="java.math.BigDecimal" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="binary" />
			<property name="className" value="org.iplass.mtp.entity.BinaryReference" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="select" />
			<property name="className" value="org.iplass.mtp.entity.SelectValue" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="boolean" />
			<property name="className" value="java.lang.Boolean" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="date" />
			<property name="className" value="java.sql.Date" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="dateTime" />
			<property name="className" value="java.sql.Timestamp" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="float" />
			<property name="className" value="java.lang.Double" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="integer" />
			<property name="className" value="java.lang.Long" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="string" />
			<property name="className" value="java.lang.String" />
		</property>
		<property name="parameterType">
			<property name="typeName" value="time" />
			<property name="className" value="java.sql.Time" />
		</property>
	</service>
	<service>
		<interface>org.iplass.mtp.impl.webapi.EntityWebApiService</interface>
		<property name="maxLimit" value="1000" />
		<!-- Date format when returning CSV results in Query search of Entity CRUD API. If not specified, the runtime LocaleFormat  is set -->
		<!-- 
		<property name="csvDateTimeFormat" value="yyyy/MM/dd HH:mm:ss" />
		<property name="csvDateFormat" value="yyyy/MM/dd" />
		<property name="csvTimeFormat" value="HH:mm:ss" />
		 -->
	</service>

	<service>
		<interface>org.iplass.mtp.impl.cache.CacheService</interface>
		
		<!-- OAuth AuthorizationCodeのキャッシュ -->
		<!-- TODO 本番利用時はRedisCacheStoreFactoryなど利用するように設定変更が必要 -->
		<property name="oauthCodeStore" class="org.iplass.mtp.impl.cache.store.builtin.SimpleCacheStoreFactory">
			<property name="namespace" value="mtp.oauth.codeStore" />
			<!-- 10分有効 -->
			<property name="timeToLive" value="600000" />
		</property>

		<!-- ActionContentキャッシュ -->
		<!-- TODO 本番利用時はRedisCacheStoreFactoryなど利用するように設定変更が必要 -->
		<property name="actionContent" class="org.iplass.mtp.impl.cache.store.builtin.TransactionLocalCacheStoreFactory">
			<property name="namespacePattern" value="mtp[.]action[.]content[.].*" />
			<property name="indexCount" value="3" /><!-- index:actionName,entityName;oid, entityName -->
			<property name="backendStore" class="org.iplass.mtp.impl.cache.store.builtin.SimpleCacheStoreFactory">
				<property name="size" value="128" />
			</property>
		</property>

		<!-- Tenant利用可否のキャッシュ -->
		<property name="tenantAvailable" class="org.iplass.mtp.impl.cache.store.builtin.TransactionLocalCacheStoreFactory">
			<property name="namespace" value="mtp.tenant.available.tenant" />
			<property name="backendStore" class="org.iplass.mtp.impl.cache.store.builtin.SyncServerCacheStoreFactory">
				<property name="cacheKeyResolver" class="org.iplass.mtp.impl.cache.store.keyresolver.IntegerCacheKeyResolver" />
				<property name="store" class="org.iplass.mtp.impl.cache.store.builtin.SimpleCacheStoreFactory">
					<!-- 6時間有効 -->
					<property name="timeToLive" value="21600000" />
				</property>
			</property>
		</property>
	</service>

	<service final="true">
		<interface>org.iplass.mtp.impl.web.template.TemplateService</interface>
		<class>org.iplass.mtp.impl.web.template.TemplateService</class>
	</service>
	<service final="true">
		<interface>org.iplass.mtp.impl.web.staticresource.StaticResourceService</interface>
		<class>org.iplass.mtp.impl.web.staticresource.StaticResourceService</class>
	</service>
	<service>
		<interface>org.iplass.mtp.impl.session.SessionService</interface>
		<class>org.iplass.mtp.impl.session.jee.HttpSessionService</class>
	</service>
	<service>
		<interface>org.iplass.mtp.impl.web.actionmapping.ActionMappingService</interface>
		<property name="interceptor" class="org.iplass.mtp.impl.web.interceptors.InitialInterceptor" />
		<property name="interceptor" class="org.iplass.mtp.impl.web.interceptors.AuthInterceptor" />
		<property name="interceptor" class="org.iplass.mtp.impl.web.interceptors.ExceptionInterceptor">
			<property name="noHande" value="org.iplass.mtp.auth.NeedTrustedAuthenticationException" />
			<property name="noHande" value="org.iplass.mtp.impl.web.RequestBodyTooLargeException" />
			<property name="eliminate" value="org.apache.catalina.connector.ClientAbortException" />
			<property name="eliminate" value="org.iplass.mtp.impl.web.WebProcessRuntimeException:org.apache.catalina.connector.ClientAbortException" />
		</property>
		<property name="interceptor" class="org.iplass.mtp.impl.web.interceptors.LoggingInterceptor">
			<property name="partsTrace" value="true" />
			<property name="paramName" value="defName" />
			<property name="noStackTrace" value="org.apache.catalina.connector.ClientAbortException" />
			<property name="noStackTrace" value="org.iplass.mtp.impl.web.WebProcessRuntimeException:org.apache.catalina.connector.ClientAbortException" />
		</property>
		<property name="interceptor" class="org.iplass.mtp.impl.web.interceptors.ActionCacheInterceptor" />
	</service>

	<service final="true">
		<interface>org.iplass.mtp.impl.csv.CsvUploadService</interface>
		<class>org.iplass.mtp.impl.csv.CsvUploadService</class>
		<!-- CSVアップロードエラー表示件数上限値 (-1は無制限)  -->
		<property name="showErrorLimitCount" value="100"/>
	</service>

</serviceDefinition>
